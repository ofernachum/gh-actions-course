name: 14 - Using Artifacts
on:
    workflow_dispatch:

# Create a dynamic artifact names appended by the Commit SHA. This will create a different
# Artifact for every build
env:
    build-artifact-key: app-${{ github.sha }}
    test-coverage-key: test-coverage-${{ github.sha }}

jobs:

    test-build:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: 14-Artifacts/react-app


        steps:
            - name: Checkout Code
              uses: actions/checkout@v4
            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                node-version: '20.x'
            - name: Download Cached Dependencies
              uses: actions/cache@v3
              id: cache
              with:
                path: 14-Artifacts/react-app/node_modules
                key: deps-node-modules-${{ hashfiles('14-Artifacts/react-app/package-lock.json') }}

            - name: Install Dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: npm ci

            - name: Unit tests
              run: npm run test -- --coverage
            
            # Upload the Test results as artifact
            - name: Upload Test Results
              uses: actions/upload-artifact@v4
              with:
                name: ${{ env.test-coverage-key }} 
                path: 14-Artifacts/react-app/coverage

            - name: Build code
              run: npm run build
            
             # Upload the build directory as artifact
            - name: Upload Build Files
              uses: actions/upload-artifact@v4
              with:
                name: ${{ env.build-artifact-key }}
                path: 14-Artifacts/react-app/build

    deploy:
        runs-on: ubuntu-latest
        needs:  test-build
        steps:
            # Download the artifact:
            - name: Download Build Artifact
              uses: actions/download-artifact@v4
              with:
                name: ${{ env.build-artifact-key }}
                path: build

            - name: Show directory structure
              run: ls -R

    


